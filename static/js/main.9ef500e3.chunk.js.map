{"version":3,"sources":["constans.js","components/Column.js","redux/todoSlice.js","components/MoveItem.js","components/defaultStyle.js","components/AddTodoForm.js","pages/TaskManager.js","redux/employeeSlice.js","pages/EmployeeManager.js","pages/ListCanceledTask.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["COLUMN_NAMES","Column","children","className","title","useDrop","accept","drop","name","collect","monitor","isOver","canDrop","item","NEW","IN_PROGRESS","RESOLVED","currentColumnName","ref","style","backgroundColor","todoSlice","createSlice","initialState","reducers","addTodo","state","action","todo","id","nanoid","nameTask","payload","startDate","assignee","textNotes","status","column","checked","push","deleteTodo","existingTodo","filter","deleteTodoList","toggleCancelTodoList","currentDateUnixTimestamp","moment","unix","canceledDate","format","map","toggleCancelTodo","updateColumn","dateFinished","toggledchecked","actions","MoveItem","index","keyid","dispatch","useDispatch","useRef","todoItems","useSelector","todos","useState","showNotes","setShowNotes","useDrag","type","end","dropResult","getDropResult","CurrentDateUnixTimestamp","message","warning","isDragging","drag","opacity","padding","onChange","e","target","display","justifyContent","margin","FieldTimeOutlined","color","onClick","CommentOutlined","control","height","fontSize","fontWeight","highlighter","overflow","input","width","border","fontFamily","minHeight","outline","maxHeight","position","bottom","suggestions","list","borderBottom","dateFormatList","Option","Select","range","result","i","AddTodoForm","Form","useForm","form","checkDuplicate","setCheckDuplicate","taskData","setTaskData","employeesActive","employees","employee","statusEmployee","clickCountName","setClickCountName","clickCountNameNotes","setClickCountNameNotes","warningInputLength","setWarningInputLength","statusData","value","console","log","slice","onFinish","values","resetFields","Item","label","rules","max","required","placeholder","maxLength","onKeyDown","key","match","preventDefault","showTime","defaultValue","_","dateString","disabledDate","current","endOf","disabledTime","date","hour","minute","millisecond","Number","disabledHours","disabledMinutes","disabledSeconds","dateRender","showSearch","optionFilterProp","filterOption","option","toLowerCase","indexOf","nameEmployee","newValue","newplain","length","defaultStyle","trigger","data","disabled","textAlign","forEach","todoItem","htmlType","TestApp","isModalVisible","setIsModalVisible","returnItemsForColumn","columnName","reverse","visible","onCancel","check","DndProvider","backend","HTML5Backend","employeeSlice","codeEmployee","addEmployee","toggleStatusEmployee","toggleEmployeesList","includes","regex","RegExp","EmployeeManager","employeeData","setEmployeeData","valueCheckbox","setValueCheckbox","clickCount","setClickCount","selectStatusEmployee","columns","dataIndex","render","object","minWidth","options","marginTop","test","replace","trim","initialValue","float","dataSource","rowSelection","selectedRowKeys","ListCanceledTask","Header","to","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","employeeReducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9ef500e3.chunk.js","sourcesContent":["export const COLUMN_NAMES = {\r\n    NEW: \"New\",\r\n    IN_PROGRESS: \"In Progress\",\r\n    RESOLVED: \"Resolved\"\r\n};\r\n","import React from 'react';\r\nimport { useDrop } from \"react-dnd\";\r\nimport { COLUMN_NAMES } from \"../constans\";\r\n\r\n\r\nfunction Column({ children, className, title }) {\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: \"Our first type\",\r\n        drop: () => ({ name: title }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop()\r\n        }),\r\n        // Có thể di chuyển task đến cột \r\n        canDrop: (item) => {\r\n            const { NEW, IN_PROGRESS, RESOLVED } = COLUMN_NAMES;\r\n            const { currentColumnName } = item;\r\n            return (\r\n                currentColumnName === title ||\r\n                (currentColumnName === NEW &&\r\n                    (title === IN_PROGRESS)) ||\r\n                (currentColumnName === NEW &&\r\n                    (title === RESOLVED)) ||\r\n                (currentColumnName === IN_PROGRESS &&\r\n                    (title === RESOLVED))\r\n            );\r\n        }\r\n    });\r\n\r\n    const getBackgroundColor = () => {\r\n        if (isOver) {\r\n            if (canDrop) {\r\n                return \"rgb(188,251,255)\";\r\n            } else if (!canDrop) {\r\n                return \"rgb(255,188,188)\";\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            className={className}\r\n            style={{ backgroundColor: getBackgroundColor() }}\r\n        >\r\n            <div>\r\n                <span>{title}</span>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Column;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport moment from 'moment';\r\nimport { COLUMN_NAMES } from \"../constans\";\r\n\r\nconst { NEW, IN_PROGRESS } = COLUMN_NAMES;\r\n\r\nexport const todoSlice = createSlice(\r\n    {\r\n        name: 'todos',\r\n        initialState: [],\r\n        reducers: {\r\n            addTodo: (state, action) => {\r\n                const todo = {\r\n                    id: nanoid(),\r\n                    nameTask: action.payload.nameTask,\r\n                    startDate: action.payload.startDate,\r\n                    assignee: action.payload.assignee,\r\n                    textNotes: action.payload.textNotes,\r\n                    status: action.payload.status,\r\n                    column: action.payload.column,\r\n                    checked: false,\r\n                };\r\n                state.push(todo);\r\n            },\r\n            deleteTodo: (state, action) => {\r\n                const existingTodo = state.filter((todo) => todo.id !== action.payload.id)\r\n                state = existingTodo;\r\n                return state\r\n            },\r\n            deleteTodoList: (state) => {\r\n                const existingTodo = state.filter((todo) => {\r\n                    if ((todo.column !== NEW && todo.checked !== true) || (todo.checked === true && todo.column !== NEW)) {\r\n                        return todo;\r\n                    }\r\n                    return '';\r\n                });\r\n                state = existingTodo;\r\n                return state;\r\n            },\r\n            toggleCancelTodoList: (state) => {\r\n                const currentDateUnixTimestamp = moment().unix();\r\n                const canceledDate = moment.unix(currentDateUnixTimestamp).format(\"HH: mm: ss YYYY-MM-DD\");\r\n                state.map((todo) => {\r\n                    if (todo.checked === true && todo.column === IN_PROGRESS) {\r\n                        todo.status = 4;\r\n                        todo.column = '';\r\n                        todo.canceledDate = canceledDate;\r\n                    }\r\n                    return todo;\r\n                })\r\n            },\r\n            toggleCancelTodo: (state, action) => {\r\n                state.map((todo) => {\r\n                    if (todo.id === action.payload.id) {\r\n                        todo.status = 4;\r\n                        todo.column = '';\r\n                        todo.canceledDate = action.payload.canceledDate;\r\n                        return todo;\r\n                    }\r\n                    return todo\r\n                })\r\n            },\r\n            updateColumn: (state, action) => {\r\n                state.map((todo) => {\r\n                    if (todo.id === action.payload.id) {\r\n                        todo.column = action.payload.column;\r\n                        todo.checked = false;\r\n                        todo.dateFinished = action.payload.dateFinished;\r\n                        return todo;\r\n                    }\r\n                    return todo\r\n                })\r\n            },\r\n            toggledchecked: (state, action) => {\r\n                const existing = state.filter((todo) => todo.id === action.payload.id);\r\n                existing.map((todo) => todo.checked = action.payload.checked)\r\n\r\n            }\r\n        },\r\n    }\r\n);\r\n\r\nexport const { addTodo, deleteTodo, deleteTodoList, toggleCancelTodoList, toggleCancelTodo, updateColumn, toggledchecked } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;","import React, { useRef, useState } from \"react\";\r\nimport moment from 'moment';\r\nimport { Button, Checkbox, message } from 'antd';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { COLUMN_NAMES } from \"../constans\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateColumn } from '../redux/todoSlice';\r\nimport { deleteTodo, toggleCancelTodo, toggledchecked } from '../redux/todoSlice';\r\nimport {\r\n    FieldTimeOutlined,\r\n    CommentOutlined\r\n} from '@ant-design/icons';\r\n\r\nfunction MoveItem({\r\n    name,\r\n    status,\r\n    startDate,\r\n    dateFinished,\r\n    assignee,\r\n    textNotes,\r\n    index,\r\n    currentColumnName,\r\n    keyid,\r\n}) {\r\n    // console.log('hello')\r\n    const dispatch = useDispatch();\r\n    // console.log('hello123')\r\n    const ref = useRef(null);\r\n    // console.log(name)\r\n    const todoItems = useSelector((state) => state.todos);\r\n    const { NEW, IN_PROGRESS, RESOLVED } = COLUMN_NAMES;\r\n    const [showNotes, setShowNotes] = useState(false)\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { index, name, currentColumnName, type: \"Our first type\" },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (dropResult) {\r\n                const { name } = dropResult;\r\n                switch (name) {\r\n                    case IN_PROGRESS:\r\n                        dispatch(\r\n                            updateColumn({\r\n                                id: keyid,\r\n                                column: IN_PROGRESS,\r\n                            })\r\n                        )\r\n                        break;\r\n                    case RESOLVED:\r\n                        const CurrentDateUnixTimestamp = moment().unix();\r\n                        const dateFinished = moment.unix(CurrentDateUnixTimestamp).format(\"HH:mm:ss DD-MM-YYYY\");\r\n                        const startDate = todoItems.filter((todo) => todo.id === keyid)\r\n                        if (currentColumnName === name) {\r\n                            break;\r\n                        }\r\n                        if (startDate[0].startDate > dateFinished) {\r\n                            message.warning('Chưa bắt đầu nữa mà !!!')\r\n                            break;\r\n                        }\r\n                        dispatch(\r\n                            updateColumn({\r\n                                id: keyid,\r\n                                column: RESOLVED,\r\n                                dateFinished: dateFinished,\r\n                            })\r\n                        )\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    const handleCheckboxClick = (e) => {\r\n        dispatch(\r\n            toggledchecked({\r\n                id: keyid,\r\n                checked: e.target.checked,\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleDeleteClick = (e) => {\r\n        dispatch(\r\n            deleteTodo({\r\n                id: keyid,\r\n            })\r\n        )\r\n    }\r\n    const handleCancelClick = () => {\r\n        const CurrentDateUnixTimestamp = moment().unix();\r\n        const canceledDate = moment.unix(CurrentDateUnixTimestamp).format(\"HH: mm: ss YYYY-MM-DD\");\r\n        dispatch(\r\n            toggleCancelTodo({\r\n                id: keyid,\r\n                canceledDate: canceledDate,\r\n            })\r\n        )\r\n    }\r\n\r\n    const opacity = isDragging ? 1 : 1;\r\n\r\n    drag(ref);\r\n    return (\r\n        <li\r\n            ref={ref} className=\"movable-item\" style={{ opacity: opacity }}\r\n        >\r\n            {currentColumnName === NEW || currentColumnName === IN_PROGRESS\r\n                ?\r\n                (<div className=\"todo-item-content\" style={{ padding: '8px' }}>\r\n                    <Checkbox onChange={handleCheckboxClick}>\r\n                        <div className=\"todo-item-description\">\r\n                            <div style={{ display: 'flex', justifyContent: 'center', margin: '0' }}>\r\n                                <p >STT: {index + 1}</p>\r\n                                <p >Tên task: {name}</p>\r\n                            </div>\r\n                            <div style={{ display: 'flex', justifyContent: 'center', margin: '0' }}>\r\n                                <p>Assignee: {assignee}</p>\r\n                                <p><span><FieldTimeOutlined style={{ color: '#6DE039' }} /></span> {startDate}</p>\r\n                            </div>\r\n\r\n                            <p>\r\n                                {showNotes && `Ghi chú: ${textNotes}`}\r\n                                <Button onClick={() => setShowNotes(!showNotes)} >\r\n                                    <CommentOutlined />\r\n                                </Button>\r\n\r\n                            </p>\r\n\r\n                        </div>\r\n                    </Checkbox>\r\n                </div>)\r\n                :\r\n                (<div className=\"todo-item-content\">\r\n                    <div className=\"todo-item-description\">\r\n                        <div style={{ display: 'flex', justifyContent: 'center', margin: '0' }}>\r\n                            <p>STT: {index + 1}</p>\r\n                            <p>Tên task: {name}</p>\r\n                        </div>\r\n                        <div style={{ display: 'flex', justifyContent: 'center', margin: '0' }}>\r\n                            <p><span><FieldTimeOutlined style={{ color: '#6DE039' }} /></span> {startDate}</p>\r\n                            <p><span><FieldTimeOutlined style={{ color: '#F96564' }} /></span> {dateFinished}</p>\r\n                        </div>\r\n                        <p>\r\n                            {showNotes && `Ghi chú: ${textNotes}`}\r\n                            <Button onClick={() => setShowNotes(!showNotes)} >\r\n                                <CommentOutlined />\r\n                            </Button>\r\n\r\n                        </p>\r\n                    </div>\r\n                </div>)\r\n            }\r\n\r\n            {currentColumnName === NEW\r\n                ? <Button\r\n                    className=\"todo-item_delete\"\r\n                    style={{ backgroundColor: '#ff0000', color: '#fff' }}\r\n                    onClick={handleDeleteClick}>\r\n                    Xóa\r\n                </Button>\r\n                : currentColumnName === IN_PROGRESS\r\n                    ? <Button\r\n                        className=\"todo-item_delete\"\r\n                        style={{ backgroundColor: '#FFA500', color: '#fff' }}\r\n                        onClick={handleCancelClick}>\r\n                        Hủy\r\n                    </Button> : ''}\r\n\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default MoveItem;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    control: {\r\n        backgroundColor: \"#fff\",\r\n        height: 100,\r\n        fontSize: 12,\r\n        fontWeight: \"normal\",\r\n    },\r\n\r\n    highlighter: {\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    input: {\r\n        margin: 0\r\n    },\r\n\r\n    \"&singleLine\": {\r\n        control: {\r\n            display: \"inline-block\",\r\n            width: 130\r\n        },\r\n\r\n        highlighter: {\r\n            padding: 1,\r\n            border: \"2px inset transparent\"\r\n        },\r\n\r\n        input: {\r\n            padding: 1,\r\n\r\n            border: \"2px inset\"\r\n        }\r\n    },\r\n\r\n    \"&multiLine\": {\r\n        control: {\r\n            fontFamily: \"monospace\",\r\n\r\n            border: \"1px solid silver\"\r\n        },\r\n\r\n        highlighter: {\r\n            padding: 9\r\n        },\r\n\r\n        input: {\r\n            padding: 9,\r\n            minHeight: 63,\r\n            outline: 0,\r\n            border: 0,\r\n            maxHeight: 100,\r\n            overflow: 'auto',\r\n            position: 'absolute',\r\n            bottom: 14,\r\n        }\r\n    },\r\n\r\n    suggestions: {\r\n        list: {\r\n            backgroundColor: \"white\",\r\n            border: \"1px solid rgba(0,0,0,0.15)\",\r\n            fontSize: 10\r\n        },\r\n\r\n        item: {\r\n            padding: \"5px 15px\",\r\n            borderBottom: \"1px solid rgba(0,0,0,0.15)\",\r\n\r\n            \"&focused\": {\r\n                backgroundColor: \"#cee4e5\"\r\n            }\r\n        }\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, DatePicker, Select, message } from 'antd';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTodo } from '../redux/todoSlice';\r\nimport { MentionsInput, Mention } from \"react-mentions\";\r\nimport moment from 'moment';\r\nimport { COLUMN_NAMES } from \"../constans\";\r\nimport defaultStyle from \"./defaultStyle\"\r\n\r\nconst dateFormatList = ['HH:mm:ss DD/MM/YYYY'];\r\nconst { Option } = Select;\r\n\r\nfunction range(end) {\r\n    const result = [];\r\n    for (let i = 0; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction AddTodoForm() {\r\n    const [form] = Form.useForm();\r\n    const [checkDuplicate, setCheckDuplicate] = useState(false);\r\n    const [taskData, setTaskData] = useState({\r\n        nameTask: '',\r\n        startDate: '',\r\n        assignee: '',\r\n        textNotes: '',\r\n        status: 0,\r\n\r\n    });\r\n    const dispatch = useDispatch();\r\n    const todoItems = useSelector((state) => state.todos);\r\n    const employees = useSelector((state) => state.employees);\r\n    const employeesActive = employees.filter((employee) => employee.statusEmployee === 1)\r\n    const [clickCountName, setClickCountName] = useState(0);\r\n    const [clickCountNameNotes, setClickCountNameNotes] = useState(0);\r\n    const [warningInputLength, setWarningInputLength] = useState(0)\r\n    const statusData = [\r\n        {\r\n            id: 1,\r\n            value: 'New',\r\n        },\r\n        {\r\n            id: 2,\r\n            value: 'In Progress',\r\n        },\r\n        {\r\n            id: 3,\r\n            value: 'Resolved',\r\n        },\r\n        {\r\n            id: 4,\r\n            value: 'Canceled',\r\n        },\r\n    ]\r\n    const onFinish = (values) => {\r\n\r\n        const { NEW } = COLUMN_NAMES;\r\n        // reset Field\r\n        form.resetFields();\r\n\r\n        if (checkDuplicate) {\r\n            setCheckDuplicate(false);\r\n            message.warning('Không được trùng lặp tên công việc trong một ngày')\r\n        }\r\n        else {\r\n            dispatch(\r\n                addTodo({\r\n                    nameTask: taskData.nameTask,\r\n                    startDate: taskData.startDate,\r\n                    assignee: taskData.assignee,\r\n                    textNotes: taskData.textNotes,\r\n                    status: taskData.status,\r\n                    column: NEW,\r\n                })\r\n            )\r\n            setTaskData({ ...taskData, textNotes: '' })\r\n        }\r\n    }\r\n    const handleOnClick = () => {\r\n        // Thiết lập kiểm tra có trùng lặp trong state không\r\n        todoItems.forEach((todoItem) => {\r\n            if (todoItem.nameTask === taskData.nameTask && todoItem.startDate.slice(9, 20) === taskData.startDate.slice(9, 20)) {\r\n                setCheckDuplicate(true)\r\n            }\r\n        })\r\n    }\r\n    console.log(taskData.startDate.slice(0, 2))\r\n    const disabledDate = (current) => {\r\n        // Không thể chọn ngày trước ngày hôm nay\r\n        return current && current < moment().endOf('time');\r\n    }\r\n    const disabledTime = (value) => {\r\n        // Không thể chọn thời gian nhỏ hơn thời gian hiện tại\r\n        let date = moment().endOf('date').format('DD')\r\n        let hour = moment().endOf('hours').format('HH')\r\n        let minute = moment().endOf('minutes').format('mm')\r\n        let millisecond = moment().endOf('milliseconds').format('ss')\r\n        if (value) {\r\n            if (value.minute() !== Number(minute)) {\r\n                millisecond = 0;\r\n            }\r\n            if (value.hour() !== Number(hour)) {\r\n                minute = 0;\r\n                millisecond = 0;\r\n            }\r\n            if (value.date() !== Number(date)) {\r\n                hour = 0;\r\n                minute = 0;\r\n                millisecond = 0;\r\n            }\r\n        }\r\n        return {\r\n            disabledHours: () => range(hour),\r\n            disabledMinutes: () => range(minute),\r\n            disabledSeconds: () => range(millisecond),\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Form className=\"form\" onFinish={onFinish} form={form} name=\"control-hooks\" >\r\n            <Form.Item\r\n                label=\"Tên\"\r\n                name=\"nameTask\"\r\n                rules={[\r\n                    {\r\n                        max: 100,\r\n                        required: true,\r\n                        message: \"Chỉ được nhập tối đa 100 ký tự !!!\"\r\n                    }\r\n                ]}\r\n            >\r\n                <Input\r\n                    className=\"form_input\"\r\n                    placeholder='Add todo...'\r\n                    maxLength={101}\r\n                    onChange={(e) => {\r\n                        setTaskData({ ...taskData, nameTask: e.target.value })\r\n                    }}\r\n                    onKeyDown={(e) => {\r\n                        if (taskData.nameTask === '' && e.key.match(\"^[ ]?$\")) {\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                        if (e.key.match(\"^[ ]?$\") && clickCountName === 1) {\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                        e.key.match(\"^[ ]?$\") ? setClickCountName(() => clickCountName + 1) : setClickCountName(0);\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Ngày bắt đầu\"\r\n                name=\"startDate\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Nhập ngày bắt đầu !!!\"\r\n                    }\r\n                ]}\r\n            >\r\n                <DatePicker\r\n                    showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                    style={{ width: '100%' }}\r\n                    onChange={(_, dateString) => setTaskData({ ...taskData, startDate: dateString })}\r\n                    format={dateFormatList}\r\n                    disabledDate={disabledDate}\r\n                    disabledTime={disabledTime}\r\n                    dateRender={current => {\r\n                        return (\r\n                            <div className=\"ant-picker-cell-inner\">\r\n                                {current.date()}\r\n                            </div>\r\n                        );\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Assignee\"\r\n                name=\"Assignee\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Chọn nhân viên phụ thuộc đi !!!\"\r\n                    }\r\n                ]}\r\n            >\r\n                <Select\r\n                    showSearch\r\n                    placeholder=\"Select a person\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    onChange={(e) => setTaskData({ ...taskData, assignee: e })}\r\n                >\r\n                    {employeesActive.map((employee) =>\r\n                        <Option key={employee.id} value={employee.nameEmployee}>\r\n                            {employee.nameEmployee}\r\n                        </Option>\r\n                    )}\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Ghi chú\"\r\n                style={{ position: 'relative' }}\r\n            >\r\n                <MentionsInput\r\n                    value={taskData.textNotes}\r\n                    maxLength={200}\r\n                    onChange={(_, newValue, newplain) => {\r\n                        setTaskData({ ...taskData, textNotes: newplain });\r\n                        setWarningInputLength(newplain.length)\r\n                    }}\r\n                    onKeyDown={(e) => {\r\n                        if (taskData.textNotes === '' && e.key.match(\"^[ ]?$\")) {\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                        if (e.key.match(\"^[ ]?$\") && clickCountNameNotes === 1) {\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                        e.key.match(\"^[ ]?$\") ? setClickCountNameNotes(() => clickCountNameNotes + 1) : setClickCountNameNotes(0);\r\n                    }}\r\n                    style={defaultStyle}\r\n                >\r\n                    <Mention\r\n                        trigger=\"@\"\r\n                        data={employeesActive}\r\n                        style={{ color: 'red' }}\r\n                    />\r\n                </MentionsInput>\r\n                <span style={{ color: 'red', display: `${warningInputLength === 200 ? 'block' : 'none'}` }}> Không được nhập quá 200 ký tự</span>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Trạng thái\"\r\n                name=\"status\"\r\n            >\r\n                <Select\r\n                    showSearch\r\n                    placeholder=\"Select status\"\r\n                    onChange={(e) => setTaskData({ ...taskData, status: e })}\r\n                    defaultValue={statusData[0].value}\r\n                    disabled\r\n                >\r\n                    {statusData.map((status) =>\r\n                        <Option key={status.id} value={status.id}>\r\n                            {status.value}\r\n                        </Option>\r\n                    )}\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item style={{ textAlign: 'center' }}>\r\n                <Button\r\n                    className=\"form_btn-add\"\r\n                    onClick={handleOnClick}\r\n                    type=\"primary\" htmlType=\"submit\"\r\n                    style={{ backgroundColor: '#00BCD4' }} >\r\n                    Add todo\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default AddTodoForm;","import React, { useState } from 'react';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport Column from '../components/Column';\r\nimport MoveItem from '../components/MoveItem'\r\nimport { COLUMN_NAMES } from \"../constans\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AddTodoForm from '../components/AddTodoForm';\r\nimport { Button, message, Modal } from 'antd';\r\nimport { deleteTodoList, toggleCancelTodoList } from '../redux/todoSlice';\r\n\r\nfunction TestApp() {\r\n    const dispatch = useDispatch();\r\n    const todoItems = useSelector((state) => state.todos);\r\n    const { IN_PROGRESS, NEW, RESOLVED } = COLUMN_NAMES;\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n    const returnItemsForColumn = (columnName) => {\r\n\r\n        if (columnName === RESOLVED) {\r\n            return todoItems\r\n                .filter((item) => item.column === columnName)\r\n                .reverse()\r\n                .map((item, index) => {\r\n                    return <MoveItem\r\n                        onChange={(e) => console.log(e)}\r\n                        key={item.id}\r\n                        name={item.nameTask}\r\n                        status={item.status}\r\n                        startDate={item.startDate}\r\n                        dateFinished={item.dateFinished}\r\n                        assignee={item.assignee}\r\n                        textNotes={item.textNotes}\r\n                        currentColumnName={item.column}\r\n                        index={index}\r\n                        keyid={item.id}\r\n                        checked={item.checked}\r\n                    />\r\n                });\r\n        }\r\n        return todoItems\r\n            .filter((item) => item.column === columnName)\r\n            .map((item, index) => {\r\n                return <MoveItem\r\n                    // style={{ backgroundColor: 'red' }}\r\n                    onChange={(e) => console.log(e)}\r\n                    key={item.id}\r\n                    name={item.nameTask}\r\n                    status={item.status}\r\n                    startDate={item.startDate}\r\n                    dateFinished={item.dateFinished}\r\n                    assignee={item.assignee}\r\n                    textNotes={item.textNotes}\r\n                    currentColumnName={item.column}\r\n                    index={index}\r\n                    keyid={item.id}\r\n                />\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const handleOnClickDelete = () => {\r\n        let check = false;\r\n        todoItems.map((todo) => {\r\n            if (todo.column === NEW) {\r\n                if (todo.checked === true) {\r\n                    check = true\r\n                    dispatch(\r\n                        deleteTodoList()\r\n                    )\r\n                }\r\n            }\r\n            return todo;\r\n        })\r\n        !check && message.warning('Cần chọn task để xóa')\r\n    }\r\n    const handleOnClickCanceled = () => {\r\n        let check = false;\r\n        todoItems.map((todo) => {\r\n            if (todo.column === IN_PROGRESS) {\r\n                if (todo.checked === true) {\r\n                    check = true;\r\n                    dispatch(\r\n                        toggleCancelTodoList()\r\n                    )\r\n                }\r\n            }\r\n            return todo;\r\n        })\r\n        !check && message.warning('Cần chọn task để Hủy')\r\n    }\r\n\r\n    const handleOnClickAdd = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    // const handleOk = () => {\r\n    //     setIsModalVisible(false);\r\n    // };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <h1>Quản lý tasks</h1>\r\n            </div>\r\n            <Modal\r\n                className=\"container_add\"\r\n                visible={isModalVisible}\r\n                // onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <h2 style={{ textAlign: 'center' }}>Tạo mới task</h2>\r\n                <AddTodoForm />\r\n            </Modal >\r\n            <div style={{ padding: '24px 0' }}>\r\n                {/* <h2>Tasks</h2> */}\r\n                <div className=\"container_btn\">\r\n                    <Button\r\n                        onClick={handleOnClickAdd}\r\n                        style={{ backgroundColor: '#00BCD4', color: '#fff', margin: '8px' }}\r\n                    >\r\n                        Add todo\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleOnClickDelete}\r\n                        style={{ backgroundColor: 'red', color: '#fff', margin: '8px' }}\r\n                    >\r\n                        Delete of new\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleOnClickCanceled}\r\n                        style={{ backgroundColor: 'orange', color: '#fff', margin: '8px' }}\r\n                    >\r\n                        Canceled of Inprogress\r\n                    </Button>\r\n                </div>\r\n                <div className=\"container_column\">\r\n                    <DndProvider backend={HTML5Backend}>\r\n                        <Column\r\n                            title={NEW} className=\"column new-column\">\r\n                            {returnItemsForColumn(NEW)}\r\n                        </Column>\r\n                        <Column\r\n                            title={IN_PROGRESS}\r\n                            className=\"column in-progress-column\"\r\n                        >\r\n                            {returnItemsForColumn(IN_PROGRESS)}\r\n                        </Column>\r\n                        <Column\r\n                            title={RESOLVED} className=\"column resolved-column\">\r\n                            {returnItemsForColumn(RESOLVED)}\r\n                        </Column>\r\n                    </DndProvider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestApp;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const employeeSlice = createSlice(\r\n    {\r\n        name: 'employees',\r\n        initialState: [\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV01',\r\n                nameEmployee: 'Nguyen Van A',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van A'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV02',\r\n                nameEmployee: 'Nguyen Van B',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van B'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV03',\r\n                nameEmployee: 'Nguyen Van C',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van C'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV04',\r\n                nameEmployee: 'Nguyen Van D',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van D'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV05',\r\n                nameEmployee: 'Nguyen Van E',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van E'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV06',\r\n                nameEmployee: 'Nguyen Van F',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van F'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV07',\r\n                nameEmployee: 'Nguyen Van G',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van G'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV08',\r\n                nameEmployee: 'Nguyen Van H',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van H'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV09',\r\n                nameEmployee: 'Nguyen Van I',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van I'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV10',\r\n                nameEmployee: 'Nguyen Van J',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van J'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV11',\r\n                nameEmployee: 'Nguyen Van K',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van K'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV12',\r\n                nameEmployee: 'Nguyen Van L',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van L'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV13',\r\n                nameEmployee: 'Nguyen Van M',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van M'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV14',\r\n                nameEmployee: 'Nguyen Van N',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van N'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV15',\r\n                nameEmployee: 'Nguyen Van O',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van O'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV16',\r\n                nameEmployee: 'Nguyen Van P',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van P'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV17',\r\n                nameEmployee: 'Nguyen Van Q',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van Q'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV18',\r\n                nameEmployee: 'Nguyen Van W',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van W'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV19',\r\n                nameEmployee: 'Nguyen Van X',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van X'\r\n            },\r\n            {\r\n                id: nanoid(),\r\n                key: nanoid(),\r\n                codeEmployee: 'NV20',\r\n                nameEmployee: 'Nguyen Van Y',\r\n                statusEmployee: 1,\r\n                display: 'Nguyen Van Y'\r\n            },\r\n\r\n        ],\r\n\r\n\r\n        // reducer \r\n\r\n        reducers: {\r\n            addEmployee: (state, action) => {\r\n                const employee = {\r\n                    id: nanoid(),\r\n                    key: nanoid(),\r\n                    codeEmployee: action.payload.codeEmployee,\r\n                    nameEmployee: action.payload.nameEmployee,\r\n                    statusEmployee: action.payload.statusEmployee,\r\n                    display: action.payload.nameEmployee,\r\n                }\r\n                state.push(employee);\r\n            },\r\n            toggleStatusEmployee: (state, action) => {\r\n                state.map((employee) => {\r\n                    if (employee.id === action.payload.id) {\r\n                        employee.statusEmployee = action.payload.statusEmployee;\r\n                        return employee;\r\n                    }\r\n                    return employee;\r\n                })\r\n            },\r\n            toggleEmployeesList: (state, actions) => {\r\n                const existingTodo = state.map((todo) => actions.payload.key.includes(todo.key) ? todo.statusEmployee = 2 : '');\r\n                state = existingTodo;\r\n            }\r\n        },\r\n    }\r\n);\r\n\r\nexport const { addEmployee, toggleStatusEmployee, toggleEmployeesList } = employeeSlice.actions;\r\n\r\nexport default employeeSlice.reducer;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Select, message, Table } from 'antd';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addEmployee, toggleStatusEmployee, toggleEmployeesList } from '../redux/employeeSlice';\r\n\r\nconst regex = new RegExp(\"^[a-zA-Z0-9]+$\");\r\n\r\n\r\nfunction EmployeeManager() {\r\n    const [employeeData, setEmployeeData] = useState({\r\n        codeEmployee: '',\r\n        nameEmployee: '',\r\n        statusEmployee: 1,\r\n    });\r\n    const [valueCheckbox, setValueCheckbox] = useState([])\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch();\r\n    const employees = useSelector((state) => state.employees)\r\n    const [clickCount, setClickCount] = useState(0)\r\n    const selectStatusEmployee = [\r\n        {\r\n            id: 1,\r\n            name: 'Hoạt động',\r\n            value: 'Hoạt động',\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ngưng hợp đồng',\r\n            value: 'Ngưng hợp đồng',\r\n        }\r\n    ]\r\n\r\n    const columns = [\r\n        {\r\n            key: 'id',\r\n            title: \"STT\",\r\n            dataIndex: 'id',\r\n            render: (_, item, index) =>\r\n            (\r\n                <div>{index + 1}</div>\r\n            )\r\n        },\r\n        {\r\n            key: 'codeEmployee',\r\n            title: \"Mã nhân viên\",\r\n            dataIndex: 'codeEmployee',\r\n        },\r\n        {\r\n            key: 'nameEmployee',\r\n            title: \"Tên nhân viên\",\r\n            dataIndex: \"nameEmployee\",\r\n        },\r\n        {\r\n            key: 'statusEmployee',\r\n            title: \"Trạng thái\",\r\n            dataIndex: \"statusEmployee\",\r\n            render: (status, object) =>\r\n                <Select\r\n                    style={{ minWidth: '160px' }}\r\n                    value={status === 1 ? `${selectStatusEmployee[0].name}` : `${selectStatusEmployee[1].name}`}\r\n                    onChange={(e) => {\r\n                        const value = e === 'Ngưng hợp đồng' ? 2 : 1\r\n                        dispatch(\r\n                            toggleStatusEmployee({\r\n                                id: object.id,\r\n                                statusEmployee: value,\r\n                            })\r\n                        )\r\n                    }}\r\n                    options={selectStatusEmployee}\r\n                />\r\n            ,\r\n        }\r\n    ]\r\n\r\n    const handleOnClickToggleStatus = () => {\r\n        if (valueCheckbox === []) {\r\n            return;\r\n        }\r\n        else {\r\n            dispatch(\r\n                toggleEmployeesList({\r\n                    key: valueCheckbox,\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const onFinish = () => {\r\n        form.resetFields();\r\n        let check = false;\r\n        // Kiểm tra trùng lặp, nếu có sẽ in thông báo\r\n        employees.forEach((employee) => {\r\n            if (employee.codeEmployee === employeeData.codeEmployee) {\r\n                message.warning('Không được trùng lặp mã nhân viên')\r\n                check = true;\r\n            }\r\n        })\r\n\r\n        !check &&\r\n            dispatch(\r\n                addEmployee({\r\n                    codeEmployee: employeeData.codeEmployee,\r\n                    nameEmployee: employeeData.nameEmployee,\r\n                    statusEmployee: employeeData.statusEmployee,\r\n                })\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"employee\">\r\n            <div>\r\n                <h1>Quản lý nhân viên</h1>\r\n            </div>\r\n            <Form onFinish={onFinish} form={form} name=\"control-hooks\" className=\"employee-form\">\r\n                <h2>Thêm mới nhân viên</h2>\r\n                <Form.Item\r\n                    label=\"Mã NV\"\r\n                    name=\"codeEmployee\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Nhập mã nhân viên đi !!!\"\r\n                        }\r\n                    ]}\r\n                    style={{ marginTop: '8px' }}\r\n                >\r\n                    <Input\r\n                        onChange={\r\n                            (e) => regex.test(e.target.value)\r\n                                && setEmployeeData({ ...employeeData, codeEmployee: e.target.value })\r\n                        }\r\n                        onKeyDown={\r\n                            e => /[^a-zA-Z0-9]/gm.test(e.key)\r\n                                && e.preventDefault()\r\n                        }\r\n                        placeholder=\"Nhập mã nhân viên\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Tên NV\"\r\n                    name=\"nameEmployee\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Nhập tên nhân viên đi !!!\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        value={employeeData.nameEmployee.replace(/\\s+/g, ' ').trim()}\r\n                        onChange={(e) => setEmployeeData({ ...employeeData, nameEmployee: e.target.value })}\r\n                        onKeyDown={(e) => {\r\n                            if (employeeData.nameEmployee === '' && e.key.match(\"^[ ]?$\")) {\r\n                                e.preventDefault();\r\n                                return;\r\n                            }\r\n                            if (e.key.match(\"^[ ]?$\") && clickCount === 1) {\r\n                                e.preventDefault();\r\n                                return;\r\n                            }\r\n                            e.key.match(\"^[ ]?$\") ? setClickCount(() => clickCount + 1) : setClickCount(0);\r\n                        }}\r\n                        placeholder=\"Nhập tên nhân viên\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Trạng thái\" name=\"statusEmployee\" initialValue={selectStatusEmployee[0].name}>\r\n                    <Input disabled />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ backgroundColor: '#00BCD4' }}>Tạo mới nhân viên</Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <div className=\"list-employees\" style={{ padding: '24px' }}>\r\n                <h2>Danh sách nhân viên</h2>\r\n                <Button\r\n                    onClick={handleOnClickToggleStatus}\r\n                    style={{\r\n                        float: 'right',\r\n                        margin: '8px 16px',\r\n                        padding: '4px',\r\n                        backgroundColor: '#EA674D',\r\n                        color: 'white'\r\n                    }}\r\n                >\r\n                    Ngưng hợp đồng\r\n                </Button>\r\n                <Table\r\n                    dataSource={employees}\r\n                    columns={columns}\r\n                    rowSelection={\r\n                        {\r\n                            onChange: (selectedRowKeys) => {\r\n                                setValueCheckbox(selectedRowKeys);\r\n                            }\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeManager;","import React from 'react';\r\nimport { Table } from 'antd';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'STT',\r\n        dataIndex: 'id',\r\n        render: (_, item, index) =>\r\n        (\r\n            <div>{index + 1}</div>\r\n        )\r\n    },\r\n    {\r\n        title: 'Tên task',\r\n        dataIndex: 'nameTask',\r\n    },\r\n    {\r\n        title: 'Assignee',\r\n        dataIndex: 'assignee',\r\n    },\r\n    {\r\n        title: 'Ngày bắt đầu',\r\n        dataIndex: 'startDate',\r\n    },\r\n    {\r\n        title: 'Ngày hủy bỏ',\r\n        dataIndex: 'canceledDate',\r\n    },\r\n    {\r\n        title: 'Ghi chú',\r\n        dataIndex: 'textNotes',\r\n    }\r\n];\r\n\r\nfunction ListCanceledTask() {\r\n    const todoItems = useSelector((state) => state.todos);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Danh sách các task hủy bỏ</h1>\r\n            </div>\r\n            <div style={{ padding: '26px' }}>\r\n                <Table dataSource={todoItems.filter((todo) => todo.status === 4)} columns={columns} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListCanceledTask;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Tasks from \"./pages/TaskManager\";\r\nimport Employees from \"./pages/EmployeeManager\";\r\nimport CancedledTasks from \"./pages/ListCanceledTask\";\r\n// import classnames from \"classnames\";\r\n// import { appRoutes } from \"./routes\";\r\n// import Header from './pages/Header'\r\n\r\n// const tabs = [\r\n//   {\r\n//     id: 1,\r\n//     name: \"Tasks\",\r\n//     slug: \"/\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Employees\",\r\n//     slug: \"/employees\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"CancedledTasks\",\r\n//     slug: \"/cancedledTasks\"\r\n//   }\r\n// ]\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"header-wrapper\">\r\n      <div className=\"header\">\r\n        <div className=\"header-logo\">Todo List app</div>\r\n        <div className=\"header-nav\">\r\n          <Link className=\"link\" to=\"/tasks\">\r\n            Tasks\r\n          </Link>\r\n          <Link className=\"link\" to=\"/employees\">\r\n            Employees\r\n          </Link>\r\n          <Link className=\"link\" to=\"/cancedledTasks\">\r\n            CancedledTasks\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  // const [type, setType] = useState(\"Tasks\")\r\n  // const routes = useRoutes(appRoutes);\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <nav>\r\n        <ul>\r\n          {tabs.map((tab) => (\r\n            <li\r\n              key={tab.id}\r\n              className={classnames({ active: type === tab.name })}\r\n            >\r\n              <Link to={tab.slug} onClick={() => setType(tab.name)}>\r\n                {tab.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav> */}\r\n      <Header />\r\n      <div className=\"App-container\">\r\n        <Routes>\r\n          <Route path=\"/tasks\" element={<Tasks />} />\r\n          <Route path=\"/employees\" element={<Employees />} />\r\n          <Route path=\"/cancedledTasks\" element={<CancedledTasks />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\nimport employeeReducer from './employeeSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todos: todoReducer,\r\n        employees: employeeReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}